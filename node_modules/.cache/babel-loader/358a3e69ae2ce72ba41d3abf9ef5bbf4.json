{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subed\\\\OneDrive\\\\Documents\\\\01-starting-project\\\\src\\\\components\\\\CourseGoals\\\\CourseInput\\\\CourseInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"../../UI/Button/Button\";\nimport \"./CourseInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseInput = props => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isValid, setIsValid] = useState(true); // indicator to check if user entered valid input or not in add goals\n\n  const goalInputChangeHandler = event => {\n    if (event.target.value.trim.length > 0) {\n      // to remove invalid css styling after entering valid user input\n      setIsValid(true); //\n    }\n\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault(); // Before triggering Add Goal button, check if the entered value is empty or not\n\n    if (enteredValue.trim().length === 0) {\n      //return; // cannot add empty goals - but it does not give user any feedback so do that add extra state\n      setIsValid(false); // - now work on style adjustment\n\n      return;\n    }\n\n    props.onAddGoal(enteredValue);\n  }; // In line 37, 41,42 - making some CSS style adjustment based on valid and invalid user input\n  // In line 35 either form control or form control invalid depending on users input\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `form-control ${!isValid ? \"invalid\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CourseInput, \"ThKE3neuvaE9uj2GU0j+/HEwCa4=\");\n\n_c = CourseInput;\nexport default CourseInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"names":["React","useState","Button","CourseInput","props","enteredValue","setEnteredValue","isValid","setIsValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal"],"sources":["C:/Users/subed/OneDrive/Documents/01-starting-project/src/components/CourseGoals/CourseInput/CourseInput.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Button from \"../../UI/Button/Button\";\nimport \"./CourseInput.css\";\n\nconst CourseInput = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n\n  const [isValid, setIsValid] = useState(true); // indicator to check if user entered valid input or not in add goals\n\n  const goalInputChangeHandler = (event) => {\n    if (event.target.value.trim.length > 0) {\n      // to remove invalid css styling after entering valid user input\n      setIsValid(true); //\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    // Before triggering Add Goal button, check if the entered value is empty or not\n    if (enteredValue.trim().length === 0) {\n      //return; // cannot add empty goals - but it does not give user any feedback so do that add extra state\n      setIsValid(false); // - now work on style adjustment\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  // In line 37, 41,42 - making some CSS style adjustment based on valid and invalid user input\n  // In line 35 either form control or form control invalid depending on users input\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={`form-control ${!isValid ? \"invalid\" : \"\"}`}>\n        <label>Course Goal</label>\n        <input type=\"text\" onChange={goalInputChangeHandler} />\n        {/* <label style={{ color: !isValid ? \"red\" : \"black\" }}>Course Goal</label>\n        <input\n          style={{\n            borderColor: !isValid ? \"red\" : \"black\",\n            background: !isValid ? \"salmon\" : \"black\",\n          }}\n          type=\"text\"\n          onChange={goalInputChangeHandler}\n        /> */}\n      </div>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;EAEA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC,CAH6B,CAGiB;;EAE9C,MAAMQ,sBAAsB,GAAIC,KAAD,IAAW;IACxC,IAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,CAAwBC,MAAxB,GAAiC,CAArC,EAAwC;MACtC;MACAN,UAAU,CAAC,IAAD,CAAV,CAFsC,CAEpB;IACnB;;IACDF,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;EACD,CAND;;EAQA,MAAMG,iBAAiB,GAAIL,KAAD,IAAW;IACnCA,KAAK,CAACM,cAAN,GADmC,CAGnC;;IACA,IAAIX,YAAY,CAACQ,IAAb,GAAoBC,MAApB,KAA+B,CAAnC,EAAsC;MACpC;MACAN,UAAU,CAAC,KAAD,CAAV,CAFoC,CAEjB;;MACnB;IACD;;IACDJ,KAAK,CAACa,SAAN,CAAgBZ,YAAhB;EACD,CAVD,CAb6B,CAyB7B;EACA;;;EACA,oBACE;IAAM,QAAQ,EAAEU,iBAAhB;IAAA,wBACE;MAAK,SAAS,EAAG,gBAAe,CAACR,OAAD,GAAW,SAAX,GAAuB,EAAG,EAA1D;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,QAAQ,EAAEE;MAA7B;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAcE,QAAC,MAAD;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA7CD;;GAAMN,W;;KAAAA,W;AA+CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}